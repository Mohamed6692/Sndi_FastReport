// <auto-generated />
using System;
using ActeAdministratif.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ActeAdministratif.Migrations
{
    [DbContext(typeof(SNDIContext))]
    [Migration("20230825081702_test2")]
    partial class test2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ActeAdministratif.Models.DemandeInit", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataRequet")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnregistrerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float?>("Montant")
                        .HasColumnType("real");

                    b.Property<string>("NombreCopie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroRecuPaiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeActAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("EnregistrerId");

                    b.ToTable("DemandeInit");
                });

            modelBuilder.Entity("ActeAdministratif.Models.Document", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Circonscription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommuneDeNaissance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDenaissance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEdition")
                        .HasColumnType("datetime2");

                    b.Property<string>("Domicile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LieuxEtablissement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LieuxNaissance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationnalite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomDeFamille")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomDeJeuneFille")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NombreEnfant")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroDePiece")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaysNaissance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pseudo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SituationMatrimoniale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeDepiece")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Numero")
                        .IsUnique();

                    b.ToTable("Document");
                });

            modelBuilder.Entity("ActeAdministratif.Models.Enregistrer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FiliationId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("FiliationId");

                    b.ToTable("Enregistrer");
                });

            modelBuilder.Entity("ActeAdministratif.Models.Filiation", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateDenaissanceMere")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDenaissancePere")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateeditionMere")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateeditionPere")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LieuxEditionMere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LieuxEditionPere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LieuxNaissanceMere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LieuxNaissancePere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomMere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomPere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPieceMere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPiecePere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrenomMere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrenomPere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeDePiecesMere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeDePiecesPere")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("DocumentId");

                    b.ToTable("Filiation");
                });

            modelBuilder.Entity("ActeAdministratif.Models.DemandeInit", b =>
                {
                    b.HasOne("ActeAdministratif.Models.Enregistrer", "Enregistrer")
                        .WithMany()
                        .HasForeignKey("EnregistrerId");

                    b.Navigation("Enregistrer");
                });

            modelBuilder.Entity("ActeAdministratif.Models.Enregistrer", b =>
                {
                    b.HasOne("ActeAdministratif.Models.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.HasOne("ActeAdministratif.Models.Filiation", "Filiation")
                        .WithMany()
                        .HasForeignKey("FiliationId");

                    b.Navigation("Document");

                    b.Navigation("Filiation");
                });

            modelBuilder.Entity("ActeAdministratif.Models.Filiation", b =>
                {
                    b.HasOne("ActeAdministratif.Models.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.Navigation("Document");
                });
#pragma warning restore 612, 618
        }
    }
}
